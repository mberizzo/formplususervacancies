{% put scripts %}
<script>
    new Vue({
        el: '#curriculum',
        data: {
            form_data: {{ formData.data|json_encode|raw }},
        },
        mounted() {
            let input = document.createElement('input');
            let domForm = document.forms["{{ this.page.renderForm['formCode'] }}"];
            input.setAttribute('type', 'hidden');
            input.setAttribute('name', 'is_curriculum');
            input.setAttribute('value', 'true');
            domForm.appendChild(input);
        },
    });

    {% if (formData.files.count) %}
        $(function() {
            var myDropzone = $('[data-control=multi-file-uploader]').get(0).dropzone;
            var files = {{ formData.files|raw }};
            var mockFiles = {};

            myDropzone.on("loadedsavedfile", function(file) {
                $(file.previewElement).on('click', '.delete', function(event) {
                    event.stopPropagation();
                    $preview = $(this).closest('.dz-preview');
                    $preview.removeClass('dz-success').addClass('dz-removing');
                    var fileId = $preview.data('id');

                    $.ajax({
                        url: window.location.href,
                        type: 'POST',
                        data: {id: fileId},
                        headers: {
                            'X-OCTOBER-REQUEST-HANDLER': 'onRemoveFile',
                        },
                    })
                    .done(function() {
                        myDropzone.removeFile(file);
                    })
                    .fail(function() {
                        alert('No se pudo eliminar el archivo. Intente nuevamente.');
                    })
                    .always(function() {
                        $preview.addClass('dz-success').removeClass('dz-removing');
                    });
                });
            });

            for (var i = files.length - 1; i >= 0; i--) {
                mockFiles[i] = {
                    id: files[i].id,
                    name: files[i].file_name,
                    size: files[i].file_size,
                    thumb: files[i].path,
                };

                myDropzone.emit("addedfile", mockFiles[i]);
                myDropzone.emit("success", mockFiles[i], mockFiles[i]);
                myDropzone.emit("loadedsavedfile", mockFiles[i]);
            }
        });
    {% endif %}
</script>
{% endput %}
